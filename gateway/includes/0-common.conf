client_max_body_size 126m;
server_tokens        off;
charset	             utf-8;
gzip                 on;
auth_basic           off;
proxy_set_header     Host       $host;
proxy_set_header     X-Real-IP  $remote_addr;
proxy_set_header     Connection "upgrade";
add_header           Cache-Control "no-store, no-cache";
add_header           Access-Control-Expose-Headers "X-Total-Count";
proxy_redirect       off;

map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

# initialize the cors variables
include /etc/nginx/includes/0-cors.conf;

# set global HTTP headers
include /etc/nginx/includes/http_headers.conf;

log_format      classic '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" '
                'request_id:"$upstream_http_x_request_id" ';

error_log       /var/log/nginx/error.log  error;
access_log      /var/log/nginx/access.log classic;

include /etc/nginx/includes/rate_limiters.conf;

limit_req_zone $login_steps_counter zone=login_steps:7m rate=60r/m;
limit_req_status 429;


error_page 429 @too_many_requests;

# NOTE: should always include api first
include /etc/nginx/sites-enabled/api.misakey.com.conf;
include /etc/nginx/sites-enabled/auth.misakey.com.conf;
include /etc/nginx/sites-enabled/misakey.com.conf;
